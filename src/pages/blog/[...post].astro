---
import { marked } from "marked";
import { getCollection, getEntries } from "astro:content";
import BaseLayout from "src/layouts/BaseLayout.astro";
import FeaturedPost from "@components/FeaturedPost.astro";
import CardAuthor from "@components/CardAuthor.astro";
import { Image } from "astro:assets";
import { formatDate } from "@js/utils";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { post: post.slug },
    props: { post: post },
  }));
}

const { post } = Astro.props;
const content = await marked.parse(
  post.body.replace(/\n(?=\n)/g, "\n\n<br/>\n"),
);

const authors = (await getEntries(post.data.author)).filter(author => author.collection === "author");
---

<BaseLayout
  title={post.data.title}
  description={post.body
    .split(" ")
    .slice(0, 20)
    .join(" ")
    .replace(/[#*_\`]/g, "")
    .replace(/\[([^\]]+)\]\([^\)]+\)/g, "$1")
    .trim() + (post.body.split(" ").length > 20 && "...")}
>
  <article id="blog-post" class="max-w-4xl mx-auto px-3 pb-28 pt-16 max-[460px]:pt-10">
    {
      post.data.image && (
        <picture>
          <Image
            src={post.data.image}
            alt={post.data.imageAlt ? post.data.imageAlt : post.data.title}
            width={post.data.image.width}
            height={post.data.image.height}
            decoding="async"
            class="w-full h-auto rounded-lg"
          />
        </picture>
      )
    }

    <section id="blog-post-details" class="mt-8 flex flex-col gap-4">
      <h1 id={post.data.title}>{post.data.title}</h1>
      <div>
        {
          post.data.date && (
            <p>
              {formatDate(post.data.date)} by
              {authors.length === 1 ? (
                <a
                  href={"/clinicians/#" + authors[0].data.name}
                  title={authors[0].data.name}
                >
                  <span
                    itemprop="author"
                    id={authors[0].data.name + "-name"}
                  >
                    <strong>{authors[0].data.name}</strong>
                  </span>
                </a>
              ) : authors.length === 2 ? (
                <a
                  href={"/clinicians/#" + authors[0].data.name}
                  title={authors[0].data.name}
                >
                  <span
                    itemprop="author"
                    id={authors[0].data.name + "-name"}
                  ><strong>{authors[0].data.name}</strong></span></a> <span>and</span> <a
                  href={"/clinicians/#" + authors[1].data.name}
                  title={authors[1].data.name}
                >
                  <span
                    itemprop="author"
                    id={authors[1].data.name + "-name"}
                  >
                    <strong>{authors[1].data.name}</strong>
                  </span>
                </a>
              ) : (
                authors.map((author, index) => (
                  <span>
                  <a
                    href={"/clinicians#" + author.data.name}
                    title={author.data.name}
                  ><span
                    itemprop="author"
                    id={author.data.name + "-name"}
                    ><strong>{author.data.name}</strong></span></a>
                  {index < authors.length - 2 && ", "}
                  {index === authors.length - 2 && ", and "}
                  </span>
                ))
              )}
            </p>
          )
        }
      </div>
    </div>

    <section id="blog-post-content" class="my-8">
      <p set:html={content} />
    </section>

    <section id="blog-post-authors" class="flex flex-col gap-4 justify-center items-center">
      {authors.map((author) => <CardAuthor author={author} />)}
    </section>
  </article>
</BaseLayout>
<FeaturedPost />
